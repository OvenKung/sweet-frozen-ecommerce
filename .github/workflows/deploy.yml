name: 🚀 Deploy Sweet Frozen E-commerce

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Job สำหรับ test และ validation
  test:
    runs-on: ubuntu-latest
    name: 🧪 Test & Validate
    
    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm install
      
    - name: ✅ Run tests
      run: npm run test
      
    - name: 🔍 Validate files
      run: npm run validate
      
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/

  # Job สำหรับ build และ deploy
  deploy:
    runs-on: ubuntu-latest
    name: 🚀 Build & Deploy
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm install
      
    - name: 🏗️ Build project
      run: |
        npm run build
        # Create .nojekyll to disable Jekyll processing
        touch .nojekyll
        # Ensure proper MIME types for modules
        echo 'application/javascript js' > .htaccess
      
    - name: 🎯 Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages with Production Monitoring

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Validate files
      run: npm run validate
      
    - name: Production readiness check
      run: npm run production-check
      
    - name: Create .nojekyll file
      run: echo "" > .nojekyll
      
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        
    - name: Post-deployment health check
      if: github.ref == 'refs/heads/main'
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "🔍 Your site will be available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        echo "⏰ It may take a few minutes for changes to appear"
        echo "🏥 Production monitoring is now active"

# ตั้งค่าสิทธิ์สำหรับ GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# กำหนดให้รันทีละ deployment
concurrency:
  group: "pages"
  cancel-in-progress: false
